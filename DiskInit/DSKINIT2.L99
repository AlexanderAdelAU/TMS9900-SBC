                        ;
                        ;****************************************
                        ;
                        ;	DISK INITIALISER
                        ;
                        ;	THIS PROGRAMME WILL INITIALISE THE BAT ETC
                        ;
                        ;**************************************
                        ;
                        ;
  0000                  R0	EQU	0
  0001                  R1	EQU	1
  0002                  R2	EQU	2
  0003                  R3	EQU	3
  0004                  R4	EQU	4
  0005                  R5	EQU	5
  0006                  R6	EQU	6
  0007                  R7	EQU	7
  0008                  R8	EQU	8
  0009                  SL	EQU	9
  000A                  SP	EQU	10
  000B                  R11	EQU	11
  000C                  R12	EQU	12
  000D                  R13	EQU	13
  000E                  R14	EQU	14
  000F                  R15	EQU	15
                        ;
                        ;	DEFINE SOME XOP'S
                        ;
                        	DXOP	CALL,6
                        	DXOP	RET,7
                        	DXOP	PUSH,8
                        	DXOP	POP,9
                        	DXOP	WHEX,10
                        	DXOP	WRITE,12			;WRITE CHAR IN MSB
                        	DXOP	READ,13			;READ CHAR IN MSB
                        	DXOP	MESG,14			;OUTPUT NULL TERMINATED MESSAGE
                        ;
                        ;  OPERATING SYSTEM EQUATES
                        ;
  F000                  MONITOR	EQU	0F000H
  C300                  SHELL_ADDR	EQU	0C300H
                        
  0100                  	AORG	0100H
  0100   1028           	JMP	START
                        ;	
                        ;
                        ;
                        ;---FCB ENTRY EQUATES
                        ;
  0010                  FLA	EQU	16			;LOAD ADDRESS	
  001A                  CRN	EQU	26			;NEXT RECORD TO READ
  000C                  FSB	EQU	12			;TWO BYTES HOLD TRACK AND SECTOR
  000E                  FSZ	EQU	14			;NUMBER OF SECTORS TO LOAD
                        ;
                        ;NOTE THERE ARE NOW 12 SECTORS PER BLOCK
                        ;SO SECTOR 2 IS THE FIRST BLOCK AFTER THE BOOT SECTOR
                        ;
                        ;SO WORD BELOW IS INTERPRETED AS
                        ; FSB, FSZ AND FLA
                        ;
                        
                        ;
                        ;--SYSTEM DIRECTORY ENTRY BLOCKS
                        ;
                        ;
  0102   5348 454C      SHELLSYS	TEXT	'SHELL   SYS'
  0106   4C20 2020      
  010A   5359 53        
  010D   00             	BYTE	0			;FILE TYPE
  010E   0002 0007      	WORD	2,7,0C300H,0,0,0,0,0,0,0	;FSB,FSZ,FLA  4 SECT PER BLOCK MEANS 2 BATS IF 5
  0112   C300 0000      
  0116   0000 0000      
  011A   0000 0000      
  011E   0000 0000      
                        ;
  0122   4244 4F53      BDOSSYS	TEXT	'BDOS    SYS'
  0126   2020 2020      
  012A   5359 53        
  012D   00             	BYTE	0
  012E   0004 0007      	WORD	4,7,0D100H,0,0,0,0,0,0,0 	;TWO BAT ENTERIES
  0132   D100 0000      
  0136   0000 0000      
  013A   0000 0000      
  013E   0000 0000      
                        ;
                        ;SAVE	TEXT	'SAVE    EXE'		;NOTE, DON'T LOAD SAVE
                        ;	BYTE	2			;TYPE 2 IS EXECUTABLE
                        ;	WORD	6,2,0C200H,0,0,0,0,0,0,0 	;SAVE COMMAND ONE BAT ENTERY
                        
                        ;DIR	TEXT	'DIR     EXE'		;NOTE, DON'T LOAD SAVE
                        ;	BYTE	2			;TYPE 2 IS EXECUTABLE
                        ;	WORD	7,2,0C400H,0,0,0,0,0,0,0 	;SAVE COMMAND ONE BAT ENTERY
                        
                        ;
                        ;BAT INITIALISER 
                        ;
  0142   FF80 FF80      BATINT	WORD	0FF80H,0FF80H		;RESERVERD FOR BOOT,BAT AND DIRECTORY ENTRIES + FUTURE
  0146   0002 FF80      	WORD	2,0FF80H			;SHELL [BLOCKS 2 AND 3]
  014A   0004 FF80      	WORD	4,0FF80H			;BDOS [BLOCKS 4 AND 5]
                        ;	WORD	0FFF8H			;SAVE [BLOCK 6]
  014E   0000           	WORD	0			;END OF TABLE
                        
  0150   000A           RETRY	WORD	10			;RETRIES
                        ;
                        ; MONITOR AND SHELL EQUATES
                        ;
  F028                  WBOOT	EQU	MONITOR+10*4			;WARM BOOT
  F010                  SELDSK	EQU	MONITOR+4*4			;SELECT A DISK
  F014                  RECAL	EQU	MONITOR+5*4			;HOME THE DRIVE
  F018                  SEEK	EQU	MONITOR+6*4			;SEEK A TRACK
  F01C                  RDREC	EQU	MONITOR+7*4			;READ A SECTOR
  F020                  WRREC	EQU	MONITOR+8*4			;WRITE A SECTOR
  F024                  RDID	EQU	MONITOR+9*4
                        ;
                        ;
  0050                  TRKDSK	EQU	80			;TRACKS PER DISK SIDE
  0012                  SECTRK	EQU	18			;SECTORS PER TRACK
  0200                  BYTSEC	EQU	512			;BYTES PER SECTOR
  0004                  SECBLK	EQU	4			;SECTOR PER BLOCK
  0002                  NSIDES	EQU	2			;NUMBER OF SIDES
  0001                  RSVDSEC	EQU	1			;RESERVED SECTORS FOR BOOT SECTOR
  0B40                  SECDSK	EQU	NSIDES*SECTRK*TRKDSK		;SECTORS ON DISK
  0001                  NBATS	EQU	1			;NO OF BAT ENTRIES
  0002                  BATSEC	EQU	RSVDSEC+1			;START SECTOR
  0000                  BATTRK	EQU	0			;START TRACK
  0000                  DIRTRK	EQU	0			;DIRECTORY STARTS HERE
  0005                  FDIRSEC	EQU	5
  0004                  NDIRSEC	EQU	4
  000B                  NAMSIZ	EQU	11			;DIRECTORY NAME SIZE
                        ;
                        ;
                        ;
                        ;	AS WE ARE USING LOCAL WORKSPACE
                        ;
  0152                  	EVEN
  0152   02E0 C01E      START	LWPI	WORKSP		;USE LOCAL WORKSPACE
  0156   020A C07C      	LI	SP,STACKP
  015A   0209 C03E      	LI	SL,STACKL
                        	;
                        	;MONITOR IS ALREADY SETUP
                        	;
  015E   04C2           	CLR	R2		;ALWAYS DRIVE A
  0160   2DA0 F010      	CALL	@SELDSK		;SELECT
  0164   2DA0 F014      	CALL	@RECAL		;HOME
  0168   2DA0 0184      	CALL	@INITBOOT		;INITIALISE BOOT SECTOR
  016C   2DA0 0192      	CALL	@INITBAT		;INITIALISE BAT
  0170   2DA0 0208      	CALL	@INITDIR		;INITIALISE DIRECTORY
  0174   2DA0 024C      	CALL	@INITSYS		;INITIALISE SYSTEM FILES
  0178   0200 0014      	LI	R0,20
  017C   2DA0 02B6      	CALL	@WAIT
                        ;	BLWP	@0FFFCH
  0180   0420 F000      	BLWP	@MONITOR		;RETURN TO MONITOR ENTRY
                        ;
                        ;--INITIALISE THE BOOT SECTOR
                        ;
  0184   0204 BF00      INITBOOT	LI	R4,LOADER		;ADDRESS OF LOADER MODULE
  0188   0203 0001      	LI	R3,1		;BOOT SECTOR
  018C   2DA0 F020      	CALL	@WRREC		;WRITE OUT THE LOADER
  0190   2DC0           	RET		
                        ;
                        ;
                        ;INITIALISE THE BAT
                        ;
                        ;
  0192   0201 C07E      INITBAT	LI	R1,IOBUF
  0196   0200 0200      	LI	R0,BYTSEC		;FLUSH BUFFER
  019A   04F1           IBAT1	CLR	*R1+		;CLEAR BAT ENTRY
  019C   0640           	DECT	R0		;FINISHED ?
  019E   16FD           	JNE	IBAT1
                        ;
                        ;--BAT INITIALISER TABLE TRANSFERRED
                        ;
  01A0   0200 0142      	LI	R0,BATINT		;BAT ALLOCATION TABLE
  01A4   0201 C07E      	LI	R1,IOBUF
  01A8   CC70           IBAT2	MOV	*R0+,*R1+		;ZERO INDICATES END OF TABLE
  01AA   16FE           	JNE	IBAT2	
  01AC   0203 0000      	LI	R3,BATTRK		;SEEK BAT TRACK
  01B0   2DA0 F018      	CALL	@SEEK		;GO SEEK
  01B4   0204 C07E      	LI	R4,IOBUF
  01B8   0203 0002      	LI	R3,BATSEC
  01BC   2DA0 F020      	CALL	@WRREC		;WRITE OUT THE BUFFER
                        ;
                        ;	NEXT BAT SECTOR
                        ;
  01C0   0201 C07E      	LI	R1,IOBUF
  01C4   0200 0200      	LI	R0,BYTSEC		;INDEX TO LAST ENTRY
  01C8   04F1           IBAT3	CLR	*R1+		;CLEAR BAT ENTRY
  01CA   0640           	DECT	R0		;FINISHED ?
  01CC   16FD           	JNE	IBAT3
  01CE   0203 0000      	LI	R3,BATTRK		;SEEK BAT TRACK
  01D2   2DA0 F018      	CALL	@SEEK		;GO SEEK
  01D6   0204 C07E      	LI	R4,IOBUF
  01DA   0203 0003      	LI	R3,BATSEC + 1
  01DE   2DA0 F020      	CALL	@WRREC		;WRITE OUT THE BUFFER
                        ;
                        ; 	LAST BAT SECTOR
                        ;
  01E2   0201 C07E      	LI	R1,IOBUF
  01E6   0200 00D0      	LI	R0,720-512 		;LAST BAT ENTRY
  01EA   04F1           IBAT4	CLR	*R1+		;CLEAR BAT ENTRY
  01EC   0640           	DECT	R0		;FINISHED ?
  01EE   16FD           	JNE	IBAT4
  01F0   0711           	SETO	*R1		;LAST LINK IS -1
  01F2   0203 0000      	LI	R3,BATTRK		;SEEK BAT TRACK
  01F6   2DA0 F018      	CALL	@SEEK		;GO SEEK
  01FA   0204 C07E      	LI	R4,IOBUF
  01FE   0203 0004      	LI	R3,BATSEC + 2
  0202   2DA0 F020      	CALL	@WRREC	
  0206   2DC0           	RET
                        ;
                        ;--INITIALISE DIRECTORY SECTORS
                        ;
  0208   0200 E5E5      INITDIR	LI	R0,0E5E5H		;NULL ENTRY BYTE
  020C   0201 C07E      	LI	R1,IOBUF
  0210   0202 0200      	LI	R2,BYTSEC
  0214   CC40           IDIR1	MOV	R0,*R1+		;FILL BUFFER
  0216   0642           	DECT	R2
  0218   16FD           	JNE	IDIR1
  021A   0203 0000      	LI	R3,DIRTRK		;SEEK DIRECTORY TRACK
  021E   2DA0 F018      	CALL	@SEEK
  0222   0203 0005      	LI	R3,FDIRSEC		;FIRST DIRECTORY SECTOR
  0226   C803 C01A      	MOV	R3,@CDSEC
  022A   0204 C07E      IDIR2	LI	R4,IOBUF
  022E   C0E0 C01A      	MOV	@CDSEC,R3		;GET NEXT DIRECTORY SECTOR
  0232   0223 FFFB      	AI	R3,-FDIRSEC		
  0236   0283 0004      	CI	R3,NDIRSEC		;FINISHED ?
  023A   1307           	JEQ	IDIR3	
  023C   C0E0 C01A      	MOV	@CDSEC,R3
  0240   2DA0 F020      	CALL	@WRREC		;WRITE OUT FIRST DIRECTORY BLOCKS
  0244   05A0 C01A      	INC	@CDSEC		;GO TO NEXT SECTOR
  0248   10F0           	JMP	IDIR2
  024A   2DC0           IDIR3	RET
                        ;
                        ;---INITIALISE SYSTEM FILES
                        ;
  024C   0208 C07E      INITSYS	LI	R8,IOBUF		;FCB ADDRESS
  0250   0203 0102      	LI	R3,SHELLSYS
  0254   0200 0040      	LI	R0,32*2		;FCB SIZE - JUST INIT SHELL and DOS
  0258   C048           	MOV	R8,R1		;FCB ADDRESS
  025A   DC73           INTSYS2	MOVB	*R3+,*R1+		;TRANSFER DIRECTOR ENTRIES
  025C   0600           	DEC	R0
  025E   16FD           	JNE	INTSYS2
  0260   0203 0000      	LI	R3,DIRTRK		;SEEK DIRECTORY TRACK
  0264   2DA0 F018      	CALL	@SEEK
  0268   0203 0005      	LI	R3,FDIRSEC		;FIRST DIRECTORY SECTOR
  026C   C108           	MOV	R8,R4		;DIRECTORY ENTRY ADDRESS
                        ;	BLWP	@MONITOR		;RETURN TO MONITOR ENTRY
  026E   2DA0 F020      	CALL	@WRREC
                        ;
                        ;--NOW WRITE OUT THE SYSTEM FILES
                        ;
  0272   0208 C07E      	LI	R8,IOBUF		;BEGIN WITH SHELL
  0276   2DA0 0284      	CALL	@WRTSYS
  027A   0228 0020      	AI	R8,32		;Use DIR Offset to now point to BDOS
  027E   2DA0 0284      	CALL	@WRTSYS
                        ;	AI	R8,32		;NOW SAVE
                        ;	CALL	@WRTSYS
                        ;	AI	R8,32		;NOW DIR
                        ;	CALL	@WRTSYS
  0282   2DC0           	RET			;ALL DONE
                        ;
                        ;--WRITE EACH SYSTEM FILE WHOSE FCB IS R8
                        ;
  0284   C0E8 001A      WRTSYS 	MOV	@CRN(R8),R3		;BEGIN AT FIRST RECORD
  0288   C068 000C      	MOV	@FSB(R8),R1		;GET BAT INDEX			
  028C   2DA0 BFAE      	CALL	@TSCONV		;CONVERT R2=TRACK,R3=SECTOR
  0290   2E03           	PUSH	R3		;SAVE SECTOR
  0292   C0C2           	MOV	R2,R3
  0294   2DA0 F018      	CALL	@SEEK		;SEEK THE TRACK
  0298   2E43           	POP	R3		;POP THE SECTOR
  029A   C128 0010      	MOV	@FLA(R8),R4		;LOAD ADDRESS			
  029E   2DA0 F020      	CALL	@WRREC		;READ IN A SECTOR
  02A2   0200 0200      	LI	R0,BYTSEC
  02A6   AA00 0010      	A	R0,@FLA(R8)		;INCREMENT LOAD ADDRESS POINTER
  02AA   05A8 001A      	INC	@CRN(R8)
  02AE   0628 000E      	DEC	@FSZ(R8)		;FINISHED ?
  02B2   16E8           	JNE	WRTSYS		;NO
  02B4   2DC0           	RET
                        ;
                        ;
                        ;WAIT FOR PERIOD IN R0
                        ;
  02B6   0600           WAIT	DEC	R0
  02B8   1304           	JEQ	WAIT1
  02BA   0701           	SETO	R1
  02BC   0601           WAIT2	DEC	R1
  02BE   16FE           	JNE	WAIT2
  02C0   10FA           	JMP	WAIT
  02C2   2DC0           WAIT1	RET
                        ;
                        ;
                        ;--------------------------------------------------------------------
                        ;
                        ;	LOADER MODULE - IT IS LOCATED AT THE FIXED MEMO LOCATION OF 1000H
                        ;
                        ;	THIS MODULE WILL BE LOADED IN THE DISK BOOT SECTOR
                        ;	AND WILL BE EXECUTED BY THE COLD BOOT MODULE WITHIN
                        ;	THE MONITOR.  THE LOADER MODULE IS RESPONSIBLE FOR 
                        ;	SEARCHING FOR, AND LOADING SHELL.SYS, BDOS.SYS AND BIOS.SYS.
                        ;
                        ;	IT ASSUMES THAT MONITOR HAS BEEN CALLED AN INITIALISED AND IS
                        ;	CALLED FROM THE MONITOR AND WILL USE MONITOR'S WORKSPACE
                        ;
                        ;	MODULE CANNOT BE LARGER THAT 512 BYTES
                        ;
                        ;-------------------------------------------------------------------
  BF00                  	AORG	SHELL_ADDR - 1024	;LOCATE LOADER JUST ABOVE THE SEHLL
  BF00   02E0 C01E      LOADER:	LWPI	WORKSP
  BF04   020A C07C      	LI	SP,STACKP
  BF08   0209 C03E      	LI	SL,STACKL
  BF0C   0202 0000      	LI	R2,0
  BF10   2DA0 F010       	CALL	@SELDSK
  BF14   2DA0 F014      	CALL	@RECAL
  BF18   0203 0000      	LI	R3,DIRTRK		;SEEK DIRECTORY TRACK
  BF1C   2DA0 F018      	CALL	@SEEK
  BF20   C041           	MOV	R1,R1
  BF22   1159           	JLT	LOADERR
  BF24   0203 0005      	LI	R3,FDIRSEC		;FIRST DIRECTORY SECTOR
  BF28   0204 C07E      	LI	R4,IOBUF
  BF2C   2DA0 F01C      	CALL	@RDREC		;READ IN THE DIRECTORY
  BF30   1152           	JLT	LOADERR	
                        ;
                        ;--LOOK FOR THE SYSTEM FILES, FIRST SHELL.
                        ;
  BF32   0208 C07E      	LI	R8,IOBUF		;SHELL SYSTEM FIRST
  BF36   0204 BFDE      	LI	R4,SHELL		;NAME OF SYSTEM FILES
  BF3A   2DA0 BF98      	CALL	@MATCH
  BF3E   164B           	JNE	LOADERR
  BF40   2DA0 BF5A      	CALL	@LOADSYS		;LOAD SHELL SYSTEM
                        ;
                        ;	NOW LOAD BDOS
                        ;
  BF44   0228 0020      	AI	R8,32		;NEXT DIRECTORY ENTRY
  BF48   0204 BFE9      	LI	R4,BDOS		;NAME OF SYSTEM FILES
  BF4C   2DA0 BF98      	CALL	@MATCH
  BF50   1642           	JNE	LOADERR
  BF52   2DA0 BF5A      	CALL	@LOADSYS		;LOAD BDOS SYSTEM
  BF56   0460 C300      	B	@SHELL_ADDR		;INITAILISE INTERRUPT VECTORS ETC AND GO TO SHELL ENTRY RATHER THAN VECTOR
                        	
                        ;
                        ;--LOAD SYSTEM FILE
                        ;
                        ;  R8 -> FCB
                        ;
  BF5A   04E8 001A      LOADSYS	CLR	@CRN(R8)
  BF5E   C0E8 001A      LOAD1	MOV	@CRN(R8),R3		;BEGIN AT FIRST RECORD	
  BF62   C068 000C      	MOV	@FSB(R8),R1		;GET BAT INDEX			
  BF66   2DA0 BFAE      	CALL	@TSCONV		;CONVERT R2=TRACK,R3=SECTOR
  BF6A   2E03           	PUSH	R3		;SAVE SECTOR
  BF6C   C0C2           	MOV	R2,R3
  BF6E   2DA0 F018      	CALL	@SEEK		;SEEK THE TRACK
  BF72   2E43           	POP	R3
  BF74   1630           	JNE	LOADERR		;R1 SET IN SEEK
  BF76   C128 0010      	MOV	@FLA(R8),R4		;LOAD ADDRESS			
  BF7A   2DA0 F01C      	CALL	@RDREC		;READ IN A SECTOR IN R3
  BF7E   C041           	MOV	R1,R1
  BF80   112A           	JLT	LOADERR
  BF82   05A8 001A      	INC	@CRN(R8)		;UP RECORD COUNT
  BF86   0200 0200      	LI	R0,BYTSEC
  BF8A   AA00 0010      	A	R0,@FLA(R8)		;INCREMENT LOAD ADDRESS POINTER
  BF8E   8A28 001A      	C	@CRN(R8),@FSZ(R8)	;FINISHED ?
  BF92   000E           
  BF94   16E4           	JNE	LOAD1		;No
  BF96   2DC0           	RET
                        
                        ;
                        ;--MATCH A DIRECTORY ENTRY
                        ;	R4->NAME TO MATCH
                        ;	R8->DIRECTORY ENTRY
                        ;
  BF98   C0C8           MATCH	MOV	R8,R3
  BF9A   0701           	SETO	R1		;ERROR FLAG
  BF9C   0200 000B      	LI	R0,NAMSIZ 		;NUMBER OF CHARS TO MATCH
  BFA0   9CF4           MATCH1	CB	*R4+,*R3+		;CHECK FOR SYSTEM FILES
  BFA2   1603           	JNE	MATCH2		;MATCH ERROR
  BFA4   0600           	DEC	R0	
  BFA6   16FC           	JNE	MATCH1	 	;CONTINUE
  BFA8   04C1           	CLR	R1
  BFAA   C041           MATCH2	MOV	R1,R1		;SET STATUS FLAGS
  BFAC   2DC0           	RET
                        ;
                        ;
                        ;------------------------------------------------------------------------
                        ;
                        ;	BLOCK TO TRACK SECTOR CONVERSION
                        ;	CONVER NEXT RECORD IN FILE TO TRACK SECTOR
                        ;
                        ;	R1 = CURRENT BLOCK
                        ;	R3 = CURRENT RECORD WITHIN FILE TO READ
                        ;
                        ;	RETURN WITH R2=TRACK,R3=SECTOR
                        ;
                        ;	TRK = INT((BLK*SECBLK + R3)/SECTRK)
                        ;	SECT = REMAINDER(BLK...)+1		
                        ;
                        ;------------------------------------------------------------------------
                        ;
  BFAE   04C2           TSCONV	CLR	R2
  BFB0   0200 0004      	LI	R0,SECBLK
  BFB4   3C80           	DIV	R0,R2		; THIS OFFSETS FROM THE FSB IE HOW MANY BLOCKS IN THE GIVEN CRN
  BFB6   A042           	A	R2,R1		;R1=BLOCK,R3=OFFSET WITHIN BLOCK
                        ;
                        ;
                        ;NOW GET TRACK AND SECTOR
                        ;REVISED MULTIPLY TO AVOID 99105 MULTIPLY BUG
                        ;
  0000                  MPY	EQU	0
  0001                  MCND	EQU	1
  0002                  PROD	EQU	2
  0000                  CNT	EQU	0
                        
  BFB8   0200 0004      	LI	MPY,SECBLK
  BFBC   04C2           	CLR	PROD
  BFBE   C000           	MOV	MPY,CNT
  BFC0   1303           	JEQ	BTTSC2
  BFC2   A081           BTTSC1	A	MCND,PROD		;R2=BLK*SECBLK 
  BFC4   0600           	DEC	CNT
  BFC6   16FD           	JNE	BTTSC1
  BFC8   A0C2           BTTSC2	A	R2,R3		;R3=BLK*SECBLK+R3
  BFCA   04C2           	CLR	R2		;MSB OF QUOTIENT
  BFCC   0200 0012      	LI	R0,SECTRK	 	;SECTORS/TRACK
  BFD0   3C80           	DIV	R0,R2	 	;R2=TRK,R3=SECT (R2+R3)/R0
  BFD2   0583           	INC	R3		;TAKES CARE OF ZERO OFFSET FOR CRN
  BFD4   2DC0           BTTSC0	RET
                        ;
                        ;
  BFD6   2FA0 BFF4      LOADERR 	MESG	@LDMSG
  BFDA   0420 F000      	BLWP	@MONITOR
                        ;
                        ;--SYSTEM FILE NAMES
                        ;
  BFDE   5348 454C      SHELL	TEXT	'SHELL   SYS'
  BFE2   4C20 2020      
  BFE6   5359 53        
  BFE9   4244 4F53      BDOS	TEXT	'BDOS    SYS'
  BFED   2020 2020      
  BFF1   5359 53        
                        ;
                        ;SAVEEXE	TEXT	'SAVE    EXE'	;SAVE IS NOW PART OF THE SHELL
                        ;
                        
                        ;
                        ;--LOADER MESSAGES
                        ;
  BFF4   0D0A           LDMSG	BYTE	0DH,0AH,
  BFF6   4361 6E27      	TEXT 	"Can't boot - no system files..."
  BFFA   7420 626F      
  BFFE   6F74 202D      
  C002   206E 6F20      
  C006   7379 7374      
  C00A   656D 2066      
  C00E   696C 6573      
  C012   2E2E 2E        
  C015   0D0A 00        	BYTE	0DH,0AH,00
  C018                  	EVEN
                        
                        
  0118                  SIZE:	EQU	$-LOADER
                        ;
                        ;---------END OF LOAD MODULE----SIZE < 512 BYTES -------------
                        ;
                        ;  BUFFER AND WORKSPACES REGIONS
                        ;
  C018   0000           NAMPTR	WORD	0
  C01A   0000           CDSEC	WORD	0		;CURRENT DIRECTORY SECTOR
  C01C   0000           BUFPTR	WORD	0
  C01E                  WORKSP	BSS	32
  C03E                  STACKL	BSS	64
  C07C                  STACKP  	EQU	$-2
  C07E                  IOBUF	BSS	512
                        ;
  C27E                  	END

No error(s).
BDOS             BFE9  MPY              0000  INITBOOT         0184  INITSYS          024C  
LOADER           BF00  INITBAT          0192  WRREC            F020  MONITOR          F000  
NDIRSEC          0004  NAMPTR           C018  SHELL            BFDE  INITDIR          0208  
RSVDSEC          0001  INTSYS2          025A  BYTSEC           0200  LOAD1            BF5E  
R0               0000  R14              000E  R2               0002  IBAT4            01EA  
R4               0004  STACKL           C03E  R6               0006  STACKP           C07C  
R7               0007  START            0152  R8               0008  LDMSG            BFF4  
BATINT           0142  SHELL_ADDR       C300  IBAT1            019A  CNT              0000  
READ             2F40  BATTRK           0000  WRITE            2F00  SECTRK           0012  
IDIR2            022A  R15              000F  IBAT2            01A8  MATCH            BF98  
SL               0009  PROD             0002  SP               000A  DIRTRK           0000  
RETRY            0150  MATCH1           BFA0  IDIR3            024A  MATCH2           BFAA  
R13              000D  RECAL            F014  RDREC            F01C  POP              2E40  
WRTSYS           0284  FLA              0010  BATSEC           0002  FSZ              000E  
FDIRSEC          0005  WBOOT            F028  R1               0001  CALL             2D80  
R5               0005  SECDSK           0B40  PUSH             2E00  CDSEC            C01A  
R11              000B  MESG             2F80  NSIDES           0002  WAIT             02B6  
R12              000C  SEEK             F018  WHEX             2E80  WAIT1            02C2  
TSCONV           BFAE  LOADSYS          BF5A  IBAT3            01C8  SELDSK           F010  
WORKSP           C01E  BTTSC0           BFD4  IDIR1            0214  BTTSC1           BFC2  
MCND             0001  BTTSC2           BFC8  NAMSIZ           000B  FSB              000C  
BDOSSYS          0122  IOBUF            C07E  RET              2DC0  TRKDSK           0050  
SHELLSYS         0102  NBATS            0001  SIZE             0118  LOADERR          BFD6  
R3               0003  BUFPTR           C01C  SECBLK           0004  CRN              001A  
WAIT2            02BC  RDID             F024  
